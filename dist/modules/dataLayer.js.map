{"version":3,"sources":["../../server/modules/dataLayer.js"],"names":["shortUUID","CarsData","_cars","getCars","getCar","id","find","car","findByMakeAndModel","make","model","addCar","reqBody","colour","year","exists","generate","push","setCar","updatedCar","targetIndex","findIndex","removeCar","filter","Object","freeze"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,YAA1B;;AAEA,MAAMC,WAAW;AACfC,SAAO,EADQ;AAEfC,WAAS,MAAM,MAAKD,KAFL;AAGfE,UAASC,EAAD,IAAQ,MAAKH,KAAL,CAAWI,IAAX,CAAgBC,OAAOA,IAAIF,EAAJ,KAAWA,EAAlC,CAHD;AAIfG,sBAAoB,CAACC,IAAD,EAAOC,KAAP,KAAiB,MAAKR,KAAL,CAAWI,IAAX,CAAgBC,OAAOA,IAAIE,IAAJ,KAAaA,IAAb,IAAqBF,IAAIG,KAAJ,KAAcA,KAA1D,CAJtB;AAKfC,UAASC,OAAD,IAAa;AACnB,UAAM,EAAEC,MAAF,EAAUJ,IAAV,EAAgBC,KAAhB,EAAuBI,IAAvB,KAAgCF,OAAtC;AACA,UAAMG,SAAS,MAAKP,kBAAL,CAAwBC,IAAxB,EAA8BC,KAA9B,CAAf;AACA,QAAI,CAACK,MAAL,EAAa;AACX,YAAMR,MAAM,EAACF,IAAIL,UAAUgB,QAAf,EAAyBP,IAAzB,EAA+BC,KAA/B,EAAsCG,MAAtC,EAA8CC,IAA9C,EAAZ;AACA,YAAKZ,KAAL,CAAWe,IAAX,CAAgBV,GAAhB;AACA,aAAO,IAAP;AACD,KAJD,MAIO;AACL,aAAO,KAAP;AACD;AAEF,GAhBc;AAiBfW,UAASC,UAAD,IAAgB;AACpB,UAAMC,cAAc,MAAKlB,KAAL,CAAWmB,SAAX,CAAqBd,OAAOA,IAAIF,EAAJ,KAAWc,WAAWd,EAAlD,CAApB;AACA,QAAIe,eAAe,CAAnB,EAAsB;AACpB,YAAKlB,KAAL,CAAWkB,WAAX,IAA0BD,UAA1B;AACA,aAAO,IAAP;AACD,KAHD,MAGO;AACL,aAAO,KAAP;AACD;AACJ,GAzBc;AA0BfG,aAAYjB,EAAD,IAAQ;AACjB,UAAMU,SAAS,MAAKX,MAAL,CAAYC,EAAZ,CAAf;AACA,QAAI,CAACU,MAAL,EAAa;AACX,aAAO,oBAAP;AACD;AACD,UAAKb,KAAL,GAAa,MAAKA,KAAL,CAAWqB,MAAX,CAAkBhB,OAAOA,IAAIF,EAAJ,KAAWA,EAApC,CAAb;AACA,WAAO,aAAP;AACD;;AAGH;AApCiB,CAAjB,CAqCAmB,OAAOC,MAAP,CAAcxB,QAAd;;AAEA,eAAeA,QAAf","file":"dataLayer.js","sourcesContent":["import { shortUUID } from 'short-uuid';\n\nconst CarsData = {\n  _cars: [],\n  getCars: () => this._cars,\n  getCar: (id) => this._cars.find(car => car.id === id),\n  findByMakeAndModel: (make, model) => this._cars.find(car => car.make === make && car.model === model),\n  addCar: (reqBody) => {\n    const { colour, make, model, year } = reqBody;\n    const exists = this.findByMakeAndModel(make, model);\n    if (!exists) {\n      const car = {id: shortUUID.generate, make, model, colour, year};\n      this._cars.push(car);\n      return true;\n    } else {\n      return false;\n    }\n    \n  },\n  setCar: (updatedCar) => {\n      const targetIndex = this._cars.findIndex(car => car.id === updatedCar.id)\n      if (targetIndex >= 0) {\n        this._cars[targetIndex] = updatedCar;\n        return true;\n      } else {\n        return false;\n      }\n  },\n  removeCar: (id) => {\n    const exists = this.getCar(id);\n    if (!exists) {\n      return 'No such car exists';\n    }\n    this._cars = this._cars.filter(car => car.id === id);\n    return 'Car deleted';\n  },\n}\n\n// Disallow new properties on our object\nObject.freeze(CarsData);\n\nexport default CarsData;"]}