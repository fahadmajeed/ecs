{"version":3,"sources":["../../server/modules/cars.js"],"names":["CarsData","mergeFeed","feed","mainList","storyTypes","map","type","filterByStory","sortedList","addVideoMeta","videos","humanizeDate","finalFeed","forEach","list"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,aAArB;;AAEA;;;AAGA,OAAO,MAAMC,YAAaC,IAAD,IAAU;AAC/B,UAAMC,WAAWC,WAAWC,GAAX,CAAeC,QAAQC,cAAcL,IAAd,EAAoBI,IAApB,CAAvB,EAChBD,GADgB,CACZG,cAAcC,aAAaD,UAAb,EAAyBE,MAAzB,CADF,EAEhBL,GAFgB,CAEZM,YAFY,CAAjB;AAGA,QAAIC,YAAY,EAAhB;AACAT,aAASU,OAAT,CAAiBC,QAAQ;AACrBF,oBAAY,CAAC,GAAGA,SAAJ,EAAe,GAAGE,IAAlB,CAAZ;AACH,KAFD;AAGA,WAAOF,SAAP;AACH,CATM","file":"cars.js","sourcesContent":["import CarsData from './dataLayer';\n\n/** expects a news feed, video list and storyTypes i.e, 'top stories', 'most popular' etc. as params\n * returns a merged feed of news item with videos and all formatting required in expected output\n * */\nexport const mergeFeed = (feed) => {\n    const mainList = storyTypes.map(type => filterByStory(feed, type))\n    .map(sortedList => addVideoMeta(sortedList, videos))\n    .map(humanizeDate);\n    let finalFeed = [];\n    mainList.forEach(list => {\n        finalFeed = [...finalFeed, ...list];\n    })\n    return finalFeed;\n}\n"]}